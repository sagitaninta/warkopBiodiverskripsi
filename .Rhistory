library(dplyr)
install.packages("dplyr")
getwd()
wranglingPackages<-c("dplyr", "forcats", "stringr", "rgbif")
lapply(wranglingPackages, require, character.only = TRUE)
?require
sapply(wranglingPackages, require, character.only = TRUE)
for(lib in wranglingPackages[!wranglingPackages %in% installed.packages()])
install.packages(lib,dependencies=TRUE)
sapply(wranglingPackages,require,character=TRUE)
# Wrangling species occurrence data downloaded from VertNet-------------------------------
sulawesi_bat_mappable <- read.delim("ChiropteraSpecimenSulawesiMappable.txt",header=TRUE)
# See the data
glimpse(sulawesi_bat) # Lots of columns with NAs and empty data
sapply(wranglingPackages,install.packages,character=TRUE)
sapply(wranglingPackages,library,character=TRUE)
glimpse(sulawesi_bat_mappable)
### Mengunduh data dari GBIF ------------------------------------------------------------
indonesia_code <- isocodes[grep("Indonesia", isocodes$name), "code"]
occ_count(country=indonesia_code)
# Mencari data Chrioptera
occ_search(scientificName = "Chiroptera", limit = 20)
# write new clean data set
write.csv(sulbat,"SulawesiBat_clean.csv")
source('D:/TAMBORA/SkrpDat/14 Event - Warung Kopi Biodiverksripsi/warkopBiodiverskripsi/01 SulawesiBats_dataWrangling.R', echo=TRUE)
wranglingPackages<-c("dplyr", "forcats", "stringr", "rgbif")
source('D:/TAMBORA/SkrpDat/14 Event - Warung Kopi Biodiverksripsi/warkopBiodiverskripsi/01 SulawesiBats_dataWrangling.R', echo=TRUE)
rm(list=ls())
## Reading cleaned data
sulbat<-read.csv("SulawesiBat_clean.csv")
spatialPackages<-c("dplyr", "sp", "raster", "rgdal", "ggmap")
for(lib in wranglingPackages[!wranglingPackages %in% installed.packages()])
sapply(wranglingPackages,require,character=TRUE)
for(lib in spatialPackages[!spatialPackages %in% installed.packages()])
install.packages(lib,dependencies=TRUE)
for(lib in spatialPackages[!spatialPackages %in% installed.packages()])
{install.packages(lib,dependencies=TRUE)}
## Making spatial data
sulbat_mat<-cbind(sulbat$decimallongitude,sulbat$decimallatitude) # extracting coordinates
sulbat_mat<-sulbat_mat[complete.cases(sulbat_mat),] # removing rows with NA
row.names(sulbat_mat)<-1:nrow(sulbat_mat) # giving numeric rownames to each points
glimpse(sulbat_mat)
head(sulbat_mat)
llCRS <- CRS("+proj=longlat +ellps=WGS84") # getting projection
sapply(spatialPackages,require,character=TRUE)
sulbat_sp<-SpatialPoints(sulbat_mat, proj4string = llCRS) # assigning projection for the coordinates
llCRS <- CRS("+proj=longlat +ellps=WGS84") # getting projection
sulbat_sp<-SpatialPoints(sulbat_mat, proj4string = llCRS) # assigning projection for the coordinates
glimpse(sulbat_sp)
bbox(sulbat_sp) # returns the bounding box of the coordinates
# Getting Indonesia Shapefile
indonesia<-getData('GADM', country='IDN', level=1)  ##Get the Province Shapefile for France
glimpse(indonesia)
indonesia$NAME_1
# To get only Sulawesi, then...
sulprovs<-c("Sulawesi Barat","Sulawesi Selatan","Sulawesi Tengah","Sulawesi Tenggara","Sulawesi Utara","Gorontalo")
sulawesi <- subset(indonesia, NAME_1 %in% sulprovs)
glimpse(sulawesi)
writeOGR(sulawesi, ".", "Sulawesi2", driver="ESRI Shapefile")
slws = importShapefile("Sulawesi2.shp")
library(PBSmapping)
spatialPackages<-c("dplyr", "sp", "raster", "rgdal", "ggmap", "PBSmapping")
for(lib in spatialPackages[!spatialPackages %in% installed.packages()])
{install.packages(lib,dependencies=TRUE)}
slsl = importShapefile("Sulawesi Selatan.shp")
spatialPackages<-c("dplyr", "sp", "raster", "rgdal", "ggmap", "PBSmapping", "rvest")
for(lib in spatialPackages[!spatialPackages %in% installed.packages()])
{install.packages(lib,dependencies=TRUE)}
library(PBSmapping)
slws = importShapefile("Sulawesi2.shp")
plotPolys(slws, projection=TRUE)
plot(sulbat_sp, axes=TRUE, add=TRUE)
# To get only Sulawesi Selatan, then...
sulsel<-indonesia[indonesia$NAME_1=="Sulawesi Selatan",]
writeOGR(sulsel, ".", "Sulawesi Selatan", driver="ESRI Shapefile")
slsl = importShapefile("Sulawesi Selatan.shp")
plotPolys(slsl, projection=TRUE)
plot(sulbat_sp, axes= TRUE, add=TRUE)
# Zooming in Sulawesi Tengah, then...
sulsel<-indonesia[indonesia$NAME_1=="Sulawesi Tengah",]
writeOGR(sulsel, ".", "Sulawesi Tengah", driver="ESRI Shapefile")
slsl = importShapefile("Sulawesi Tengah.shp")
plotPolys(slsl, projection=TRUE)
plot(sulbat_sp, axes= TRUE, add=TRUE)
# Zooming in Sulawesi Tengah, then...
sulselteng<-indonesia[indonesia$NAME_1==c("Sulawesi Tengah","Sulawesi Selatan","Sulawesi Tenggara",]
# Zooming in Sulawesi Tengah, then...
sulselteng<-indonesia[indonesia$NAME_1==c("Sulawesi Tengah","Sulawesi Selatan","Sulawesi Tenggara"),]
writeOGR(sulsel, ".", "Sulawesi Tengah", driver="ESRI Shapefile")
writeOGR(sulselteng, ".", "Sulawesi Tengah", driver="ESRI Shapefile")
writeOGR(sulselteng, ".", "SulawesiTengah", driver="ESRI Shapefile")
slsltg = importShapefile("SulawesiTengah.shp")
plotPolys(slsl, projection=TRUE)
plotPolys(slsltg, projection=TRUE)
slsl = importShapefile("Sulawesi Selatan.shp")
# Zooming in Sulawesi Selatan, then...
sulsel<-indonesia[indonesia$NAME_1=="Sulawesi Selatan",]
writeOGR(sulsel, ".", "Sulawesi Selatan", driver="ESRI Shapefile")
slsl = importShapefile("Sulawesi Selatan.shp")
plotPolys(slsl, projection=TRUE)
plot(sulbat_sp, axes= TRUE, add=TRUE)
# For data from only Maros area--------------------------------------------
maros_area_polygon = importShapefile("maros_area.shp")
maros_area <- cbind(maros_area_polygon$X,maros_area_polygon$Y)
maros_area_b<-bbox(maros_area)
gClip <- function(shp, bb){
if(class(bb) == "matrix") b_poly <- as(extent(as.vector(t(bb))), "SpatialPolygons")
else b_poly <- as(extent(bb), "SpatialPolygons")
gIntersection(shp, b_poly, byid = T)
}
marosbat_sp <- gClip(slws, maros_area_b) # not working
sulbat_maros<-sulbat %>% filter(sulbat$decimallatitude<maros_area_b[2,2])
sulbat_maros<-sulbat_maros %>% filter(sulbat_maros$decimallatitude>maros_area_b[2,1])
sulbat_maros$locality<-factor(sulbat_maros$locality)
sulmar_mat<-cbind(sulbat_maros$decimallongitude,sulbat_maros$decimallatitude) # extracting coordinates
row.names(sulmar_mat)<-1:nrow(sulmar_mat) # giving numeric rownames to each points
llCRS <- CRS("+proj=longlat +ellps=WGS84") # getting projection
sulmar_sp<-SpatialPoints(sulmar_mat, proj4string = llCRS) # assigning projection for the coordinates
plot(sulmar_sp, axes=TRUE)
glimpse(sulmar_mat) # 104 records distributed in 3 points
# Let's try to make a heatmap from Maros 56 spatial points
# Getting number of species per spatial points
maros_sp_no1<-sulbat_maros_fin %>% group_by(decimallatitude) %>% summarise(n=n())
maros_sp_no2<-sulbat_maros_fin %>% group_by(decimallongitude) %>% summarise(n=n())
maros_sp_no$decimallongitude<-c(119.6500,119.9000,119.5833)
# Let's try to make a heatmap from Maros 56 spatial points
# Getting number of species per spatial points
maros_sp_no1<-sulbat_maros %>% group_by(decimallatitude) %>% summarise(n=n())
maros_sp_no2<-sulbat_maros %>% group_by(decimallongitude) %>% summarise(n=n())
maros_sp_no1
# Making heatmap--------------------------------------------------------------------------
# Making occurrence map for bats of Sulawesi-----------------------------------------------
levels(sulbat_map$locality)
# Making occurrence map for bats of Sulawesi-----------------------------------------------
levels(sulbat$locality)
sulbat$locality<-factor(sulbat_map$locality)
sulbat$locality<-factor(sulbat$locality)
coarse.locality<-c("NORTH", "SOUTH SULAWESI IS.","NORTH SULAWESI IS.","SOUTH SULAWESI")
coarse.sulbat<-sulbat[sulbat$locality==c("NORTH", "SOUTH SULAWESI IS.","NORTH SULAWESI IS.","SOUTH SULAWESI"),]
coarse.sulbat.mat<-cbind(coarse.sulbat$decimallongitude,coarse.sulbat$decimallatitude)
coarse.sulbat.sp<-SpatialPoints(coarse.sulbat.mat,proj4string = llCRS)
plotPolys(slws,projection = T)
plot(coarse.sulbatmap.sp,add=T,color="red")
plot(coarse.sulbat.sp,add=T,color="red")
plotPolys(slws,projection = T)
coarse.sulbat.sp<-SpatialPoints(coarse.sulbat.mat,proj4string = llCRS)
sulbat_map %>% filter(locality=="NORTH") # there are 3 records with this locality. Why can't I isolate them?
sulbat %>% filter(locality=="NORTH") # there are 3 records with this locality. Why can't I isolate them?
ggplot(data=sulbat, aes(x=decimallongitude,y=decimallatitude)) +
geom_point(aes(size = n), color = "#DD0000", alpha = .5)+
scale_size_continuous(range = c(.2,10), breaks = c(5, 10, 20, 40),name = "species number")+
slwsmap  <- readOGR(dsn=".",layer="Sulawesi")
glimpse(sulbat)
library(ggplot2)
ggplot(data=sulbat, aes(x=decimallongitude,y=decimallatitude)) +
geom_point(aes(size = n), color = "#DD0000", alpha = .5)+
scale_size_continuous(range = c(.2,10), breaks = c(5, 10, 20, 40),name = "species number")+
slwsmap  <- readOGR(dsn=".",layer="Sulawesi")
ggplot(data=sulbat, aes(x=decimallongitude,y=decimallatitude)) +
geom_point(aes(size = n), color = "#DD0000", alpha = .5)+
scale_size_continuous(range = c(.2,10), breaks = c(5, 10, 20, 40),name = "species number")
slwsmap  <- readOGR(dsn=".",layer="Sulawesi")
ggplot(data=sulbat, aes(x=decimallongitude,y=decimallatitude)) +
geom_point(aes(color = "#DD0000", alpha = .5))+
scale_size_continuous(range = c(.2,10), breaks = c(5, 10, 20, 40),name = "species number")
sulawesi <- subset(indonesia, NAME_1 %in% sulprovs)
slwsmap  <- readOGR(dsn=".",layer="Sulawesi")
plot(sulawesi)
bbox(sulawesi)
sulbat_grid<-extent(sulbat_sp)
plot(gridat(sulbat_sp,offset=100))
sulbat_sp
sulbat_sp$
# Making heatmap of species
ggplot(sulbat, aes(x=decimallongitude, y=decimallongitude)) +
stat_density2d(data = sulbat_sp, aes(x=decimallongitude,y=decimallatitude, fill = ..level.., alpha = ..level..), size = 0.01, bins = 16, geom = "polygon") +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)+
coord_fixed()
sulbat_sp$
# Making heatmap of species
ggplot(sulbat, aes(x=decimallongitude, y=decimallongitude)) +
stat_density2d(data = sulbat, aes(x=decimallongitude,y=decimallatitude, fill = ..level.., alpha = ..level..), size = 0.01, bins = 16, geom = "polygon") +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)+
coord_fixed()
sulbat
colnames(sulbat)
ggplot(data=sulbat, aes(x=decimallongitude,y=decimallatitude)) +
geom_point(aes(color = family, alpha = .5))+
scale_size_continuous(range = c(.2,10), breaks = c(5, 10, 20, 40),name = "species number")
library(ggplot2)
ggplot(data=sulbat, aes(x=decimallongitude,y=decimallatitude)) +
geom_point(aes(color = family, alpha = .5))+
scale_size_continuous(range = c(.2,10), breaks = c(5, 10, 20, 40),name = "species number")
ggplot(data=sulbat, aes(x=decimallongitude,y=decimallatitude)) +
geom_point(aes(color = family))
ggplot(data=sulbat, aes(x=decimallongitude,y=decimallatitude)) +
geom_point(aes(color = genus))
colnames(sulbat)
ggplot(data=sulbat, aes(x=decimallongitude,y=decimallatitude)) +
geom_point(aes(color = year))
ggplot(data=sulbat) +
geom_bar(aes(x = year))
ggplot(data=sulbat) +
geom_histogram(aes(x = year))
barplot(sulbat,x=sulbat$year)
?barplot
hist(sulbat,x=sulbat$year)
?hist
hist(sulbat)
hist(sulbat$year)
ggplot(data=sulbat) +
geom_histogram(aes(x = year))
barplot(sulbat$year)
barplot(sulbat)
barplot(sulbat$year,sulbat$family)
barplot(sulbat$family, sulbat$year)
plot(sulbat$family, sulbat$year)
plot(sulbat$year, sulbat$family)
barplot(sulbat$year, sulbat$family)
barplot(sulbat$family, sulbat$year)
?barplot
barplot(sulbat$family)
ggplot(data=sulbat) +
geom_bar(aes(x = year))
ggplot(data=sulbat) +
geom_bar(aes(x = stateprovince))
ggplot(data=sulbat) +
geom_bar(aes(x = stateprovince)) +
coord_flip()
ggplot(data=sulbat) +
geom_bar(aes(x = county)) +
coord_flip()
ggplot(data=sulbat) +
geom_bar(aes(x = islandgroup)) +
coord_flip()
ggplot(data=sulbat) +
geom_bar(aes(x = family)) +
coord_flip()
ggplot(data=sulbat) +
geom_bar(aes(x = genus)) +
coord_flip()
ggplot(data=sulbat) +
geom_bar(aes(x = species)) +
coord_flip()
ggplot(data=sulbat) +
geom_bar(aes(x = scientificName)) +
coord_flip()
ggplot(data=sulbat) +
geom_bar(aes(x = scientificname)) +
coord_flip()
ggplot(data=sulbat, aes(x=decimallongitude,y=decimallatitude)) +
geom_point(aes(color = year, size=scientificname))
ggplot(data=sulbat, aes(x=decimallongitude,y=decimallatitude)) +
geom_point(aes(color = year, size=family))
ggplot(data=sulbat, aes(x=decimallongitude,y=decimallatitude)) +
geom_point(aes(color = family, size=year))
ggplot(data=sulbat, aes(x=decimallongitude,y=decimallatitude)) +
geom_point(aes(color = year)) + facet_wrap(~family)
ggplot(data=sulbat) +
geom_bar(aes(x = year)) + facet_wrap(~family)
